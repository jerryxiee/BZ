###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     04/Dec/2013  10:58:07 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\STM32F2xx_StdPeriph_Driver\src\stm32f2xx #
#                    _crc.c                                                   #
#    Command line =  D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\STM32F2xx_StdPeriph_Driver\src\stm32f2xx #
#                    _crc.c -D STM32F10X_CL -D USE_STDPERIPH_DRIVER -lcN      #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\Debug\List\ -lb                    #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\Debug\List\ -o                     #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\Debug\Obj\ --no_cse --no_unroll    #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --warnings_are_errors --fpu=None --dlib_config        #
#                    E:\SoftwareInstall\arm\INC\c\DLib_Config_Normal.h -I     #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\..\inc\ -I                         #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\..\CMSIS\CM3\CoreSupport\ -I       #
#                    D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\..\STM32F2xx_StdPeriph_Driver\inc\ #
#                     -I D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\ #
#                    改进型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_13081 #
#                    5_IAR6.1\STM32_Boot\EWARM\..\CMSIS\CM3\DeviceSupport\ST\ #
#                    STM32F2xx\ -On --use_c++_inline                          #
#    List file    =  D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\Debug\List\stm32f2xx_crc.lst       #
#    Object file  =  D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进 #
#                    型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IA #
#                    R6.1\STM32_Boot\EWARM\Debug\Obj\stm32f2xx_crc.o          #
#                                                                             #
#                                                                             #
###############################################################################

D:\work\行标产品\改进版一体机\源程序\改进型EGS701-1\改进型EGS701-1\STM32F2xx_Boot_V1.62\STM32F2xx_Boot_130815_IAR6.1\STM32_Boot\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_crc.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f2xx_crc.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    18-April-2011
      7            * @brief   This file provides all the CRC firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm32f2xx_crc.h"
     24          #include "assert.h"
     25          /** @addtogroup STM32F2xx_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /** @defgroup CRC 
     30            * @brief CRC driver modules
     31            * @{
     32            */
     33          
     34          /* Private typedef -----------------------------------------------------------*/
     35          /* Private define ------------------------------------------------------------*/
     36          /* Private macro -------------------------------------------------------------*/
     37          /* Private variables ---------------------------------------------------------*/
     38          /* Private function prototypes -----------------------------------------------*/
     39          /* Private functions ---------------------------------------------------------*/
     40          
     41          /** @defgroup CRC_Private_Functions
     42            * @{
     43            */
     44          
     45          /**
     46            * @brief  Resets the CRC Data register (DR).
     47            * @param  None
     48            * @retval None
     49            */
     50          void CRC_ResetDR(void)
     51          {
     52            /* Reset CRC generator */
     53            CRC->CR = CRC_CR_RESET;
     54          }
     55          
     56          /**
     57            * @brief  Computes the 32-bit CRC of a given data word(32-bit).
     58            * @param  Data: data word(32-bit) to compute its CRC
     59            * @retval 32-bit CRC
     60            */
     61          uint32_t CRC_CalcCRC(uint32_t Data)
     62          {
     63            CRC->DR = Data;
     64            
     65            return (CRC->DR);
     66          }
     67          
     68          /**
     69            * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
     70            * @param  pBuffer: pointer to the buffer containing the data to be computed
     71            * @param  BufferLength: length of the buffer to be computed					
     72            * @retval 32-bit CRC
     73            */
     74          uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
     75          {
     76            uint32_t index = 0;
     77            
     78            for(index = 0; index < BufferLength; index++)
     79            {
     80              CRC->DR = pBuffer[index];
     81            }
     82            return (CRC->DR);
     83          }
     84          
     85          /**
     86            * @brief  Returns the current CRC value.
     87            * @param  None
     88            * @retval 32-bit CRC
     89            */
     90          uint32_t CRC_GetCRC(void)
     91          {
     92            return (CRC->DR);
     93          }
     94          
     95          /**
     96            * @brief  Stores a 8-bit data in the Independent Data(ID) register.
     97            * @param  IDValue: 8-bit value to be stored in the ID register 					
     98            * @retval None
     99            */
    100          void CRC_SetIDRegister(uint8_t IDValue)
    101          {
    102            CRC->IDR = IDValue;
    103          }
    104          
    105          /**
    106            * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
    107            * @param  None
    108            * @retval 8-bit value of the ID register 
    109            */
    110          uint8_t CRC_GetIDRegister(void)
    111          {
    112            return (CRC->IDR);
    113          }
    114          
    115          /**
    116            * @}
    117            */
    118          
    119          /**
    120            * @}
    121            */
    122          
    123          /**
    124            * @}
    125            */
    126          
    127          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     CRC_CalcBlockCRC       4
     CRC_CalcCRC            0
     CRC_GetCRC             0
     CRC_GetIDRegister      0
     CRC_ResetDR            0
     CRC_SetIDRegister      0


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     CRC_ResetDR          8
     CRC_CalcCRC         12
     CRC_CalcBlockCRC    34
     CRC_GetCRC           6
     CRC_SetIDRegister    6
     CRC_GetIDRegister    8
     ??DataTable5         4
     ??DataTable5_1       4
     ??DataTable5_2       4

 
 86 bytes in section .text
 
 86 bytes of CODE memory

Errors: none
Warnings: none
