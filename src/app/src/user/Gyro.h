#ifndef __GYRO_H
#define __GYRO_H

#include "stm32f2xx.h" 

#define GYRO_TX_BUFFER_SIZE  256
#define GYRO_RX_BUFFER_SIZE  100

#define GYRO_CMD_READ_WRITE_PARAMETER   0x0121//读写参数
#define GYRO_CMD_CALIBRATE              0x0122//校准
#define GYRO_CMD_UPDATE                 0x0123//固件升级

#define GYRO_UPLOAD_CMD_READ_ACCELERATION   1//读急加速
#define GYRO_UPLOAD_CMD_WRITE_ACCELERATION  2//写急加速
#define GYRO_UPLOAD_CMD_READ_DECELERATION   3//读急减速
#define GYRO_UPLOAD_CMD_WRITE_DECELERATION  4//写急减速
#define GYRO_UPLOAD_CMD_READ_SHARP_TURN     5//读急转弯
#define GYRO_UPLOAD_CMD_WRITE_SHARP_TURN    6//写急转弯
#define GYRO_UPLOAD_CMD_CALIBRATION         7//校准陀螺仪

/**************************************************************************
//函数名：Gyro_UpdatePram  
//功能：更新急加速急减速变量 
//输入：无
//输出：无
//返回值：无 
//备注：主要是更新急加速阈值、急减速阈值
***************************************************************************/
void Gyro_UpdatePram(void);
/**************************************************************************
//函数名：Gyro_TimeTask
//功能：实现陀螺仪固件升级、急加速急减速判断
//输入：无
//输出：无
//返回值：
//备注：每秒调度1次,当检测到1次急加速或急减速时会立即上报1条位置信息,并触发拍照1张
***************************************************************************/
FunctionalState Gyro_TimeTask(void);
/**************************************************************************
//函数名：Gyro_WriteAccelerationThreshold(u8 *pBuffer, u8 BufferLen)
//功能：写急加速阈值
//输入：pBuffer:所指向的字节流分别对应0~30,30~60,60~90,90~四段速度下的急加速阈值
//输出：无
//返回值：无 
//备注：长度必须为4,否则写失败.
//收到平台下发的写急加速阈值指令或操作菜单设置急加速阈值时需要调用该函数
***************************************************************************/
void Gyro_WriteAccelerationThreshold(u8 *pBuffer, u8 BufferLen);
/**************************************************************************
//函数名：Gyro_WriteDecelerationThreshold(u8 *pBuffer, u8 BufferLen)
//功能：写急减速阈值
//输入：pBuffer:所指向的字节流分别对应0~30,30~两段速度下的急减速阈值
//输出：无
//返回值：无 
//备注：长度必须为2,否则写失败.
//收到平台下发的写急减速阈值指令或操作菜单设置急减速阈值时需要调用该函数
***************************************************************************/
void Gyro_WriteDecelerationThreshold(u8 *pBuffer, u8 BufferLen);
/**************************************************************************
//函数名：Gyro_WriteSharpTurnAngle(u8 Channel,  u16 SerialNum, u16 Angle)
//功能：写急转弯角度
//输入：Channel:通道,0为终端,1为平台,其它值为非法;Angle:角度值,单位是度;SerialNum:流水号
//输出：无
//返回值：0:成功;非0:失败
//备注：当是平台设置急 转弯角度时需要指定流水号;当是终端设置急转弯角度时可以不在意流水号
//收到平台下发的写急转弯角度或操作菜单设置急转弯角度时需调用该函数
***************************************************************************/
u8 Gyro_WriteSharpTurnAngle(u8 Channel, u16 SerialNum, u16 Angle);
/**************************************************************************
//函数名：Gyro_ReadAccelerationThreshold(u8 *pBuffer)
//功能：读急加速阈值
//输入：pBuffer:所指向的字节流分别对应0~30,30~60,60~90,90~四段速度下的急加速阈值
//输出：无
//返回值：长度为4表示读取成功,为0表示读取失败
//备注：无
//收到平台下发的读急加速阈值指令或操作菜单读急加速阈值时需要调用该函数
***************************************************************************/
u8 Gyro_ReadAccelerationThreshold(u8 *pBuffer);
/**************************************************************************
//函数名：Gyro_ReadDecelerationThreshold(u8 *pBuffer)
//功能：读急减速阈值
//输入：pBuffer:所指向的字节流分别对应0~30,30~两段速度下的急减速阈值
//输出：无
//返回值：长度为2表示读取成功,为0表示读取失败
//备注：无
//收到平台下发的读急减速阈值指令或操作菜单读急减速阈值时需要调用该函数
***************************************************************************/
u8 Gyro_ReadDecelerationThreshold(u8 *pBuffer);
/**************************************************************************
//函数名：Gyro_ReadSharpTurnAngle(u8 Channel,  u16 SerialNum)
//功能：读急转弯角度
//输入：Channel:通道,0为终端,1为平台,其它值为非法;SerialNum:流水号
//输出：无
//返回值：无 
//备注：当是平台设置急 转弯角度时需要指定流水号;当是终端设置急转弯角度时可以不在意流水号
//收到平台下发的读急转弯角度或操作菜单读急转弯角度时需调用该函数
***************************************************************************/
void Gyro_ReadSharpTurnAngle(u8 Channel, u16 SerialNum);
/**************************************************************************
//函数名：Gyro_GetSharpTurnAngle(void)
//功能：获取急转弯角度
//输入：无
//输出：无
//返回值：急转弯角度
//备注：操作菜单读急转弯角度时需调用该函数
***************************************************************************/
u16 Gyro_GetSharpTurnAngle(void);
/**************************************************************************
//函数名：Gyro_Calibrate(u8 Channel,  u16 SerialNum)
//功能：校准陀螺仪
//输入：Channel:通道,0为终端,1为平台,其它值为非法;SerialNum:流水号
//输出：无
//返回值：0:表示发送成功;非0表示发送失败 
//备注：当是平台设置急 转弯角度时需要指定流水号;当是终端设置急转弯角度时可以不在意 流水号
//收到平台下发的校准陀螺仪或操作菜单校准陀螺仪时需调用该函数
***************************************************************************/
u8 Gyro_Calibrate(u8 Channel, u16 SerialNum);
/**************************************************************************
//函数名：Gyro_GetSubjoinInfo(u8 *pBuffer)
//功能：获取陀螺仪事件信息
//输入：无
//输出：无
//返回值：无 
//备注：当有急加速、急减速、急转弯事件发生时，位置汇报中需调用该函数(添加附加ID 0xE9)
***************************************************************************/
u8 Gyro_GetSubjoinInfo(u8 *pBuffer);
/**************************************************************************
//函数名：Gyro_DisposeRadioProtocol(u8 *pBuffer, u16 BufferLen)
//功能：陀螺仪无线协议解析
//输入：无
//输出：无
//返回值：无 
//备注：收到平台下发的透传指令0x8900,透传类型为0xFD,子协议号为0xF504
//只在函数EIExpand_DisposeFunctionProtocol里调用了该函数
***************************************************************************/
void Gyro_DisposeRadioProtocol(u8 cmd, u8 *pBuffer, u16 BufferLen);
/**************************************************************************
//函数名：Gyro_ProtocolParse(u8 *pBuffer, u16 BufferLen)
//功能：陀螺仪串口协议解析
//输入：无
//输出：无
//返回值：无 
//备注：串口收到陀螺仪发送的指令后需要调用该函数解析
***************************************************************************/
void Gyro_ProtocolParse(u8 *pBuffer, u16 BufferLen);

#endif